/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.programa2futoshiki;

import javax.swing.JOptionPane;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.*;
import java.awt.*;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
/**
 *
 * @author XPC
 */
public class MenuConfigurar extends javax.swing.JFrame{

    /**
     * Creates new form MenuConfigurar
     */
    
    private ArrayList<AjustesFutoshiki> Ajustes = new ArrayList<>();
    
    MenuPrincipal menu = new MenuPrincipal();
    
    Usuario usuario;
    
    private String nombre;
    private int Tablero;
    private String Dificultad;
    private int MultiNivel;
    private int UsoReloj;
    private String Posicion;
    private int Horas = 0;
    private int Minutos = 0;
    private int Segundos = 0;
    
    /*
    private String nombre;
    private int Tablero = getTam(); 
    private String Dificultad = getDificultad();
    private int MultiNivel = getMultiNivel(); // 0 : No  1: Si
    private int UsoReloj = getReloj(); // 0 : Cronometro  1: Temporizador   2: No
    private String Posicion = getPosicion();
    */
    
    public MenuConfigurar(){
        
        initComponents();
        setLocationRelativeTo(null); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboxTamaño2 = new javax.swing.JComboBox<>();
        txtTitulo = new javax.swing.JLabel();
        lblTamaño = new javax.swing.JLabel();
        lblNivel = new javax.swing.JLabel();
        lblMultiNivel = new javax.swing.JLabel();
        botonJugar = new javax.swing.JButton();
        lblReloj = new javax.swing.JLabel();
        lblReloj1 = new javax.swing.JLabel();
        cboxTamaño = new javax.swing.JComboBox<>();
        cboxNivel = new javax.swing.JComboBox<>();
        cboxMultiNivel = new javax.swing.JComboBox<>();
        cboxReloj = new javax.swing.JComboBox<>();
        cboxPosicion = new javax.swing.JComboBox<>();
        botonSalir = new javax.swing.JButton();
        lblJugador = new javax.swing.JLabel();
        txtfUsuario = new javax.swing.JTextField();
        Guardar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tabPanelReloj = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtfHoras = new javax.swing.JTextField();
        txtfMinutos = new javax.swing.JTextField();
        txtfSegundos = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        cboxTamaño2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboxTamaño2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxTamaño2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTamaño2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTitulo.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitulo.setText("Configuración de la Partida");
        getContentPane().add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 373, 88));

        lblTamaño.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblTamaño.setText("Tamaño de la cuadrícula:");
        getContentPane().add(lblTamaño, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        lblNivel.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblNivel.setText("Nivel del juego:");
        getContentPane().add(lblNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        lblMultiNivel.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblMultiNivel.setText("Multinivel:");
        getContentPane().add(lblMultiNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        botonJugar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        botonJugar.setText("Jugar");
        botonJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJugarActionPerformed(evt);
            }
        });
        getContentPane().add(botonJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 700, 140, -1));

        lblReloj.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblReloj.setText("Uso del reloj:");
        getContentPane().add(lblReloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, -1, -1));

        lblReloj1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblReloj1.setText("Posición de los dígitos:");
        getContentPane().add(lblReloj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, -1, -1));

        cboxTamaño.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboxTamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3x3", "4x4", "5x5", "6x6", "7x7", "8x8", "9x9", "10x10" }));
        cboxTamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTamañoActionPerformed(evt);
            }
        });
        cboxTamaño.setRenderer(new javax.swing.ListCellRenderer<String>() {

            @Override
            public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel(value);
                label.setFont(new java.awt.Font("Dialog", 0, 14));

                if (index == 0) {
                    label.setForeground(Color.RED);
                } else {
                    label.setForeground(Color.BLACK);
                }

                if (isSelected) {
                    label.setBackground(Color.LIGHT_GRAY);
                    label.setOpaque(true);
                }

                return label;
            }
        });
        getContentPane().add(cboxTamaño, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 234, -1));

        cboxNivel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboxNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fácil", "Intermedio", "Difícil" }));
        cboxNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxNivelActionPerformed(evt);
            }
        });
        cboxNivel.setRenderer(new javax.swing.ListCellRenderer<String>() {

            @Override
            public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel(value);
                label.setFont(new java.awt.Font("Dialog", 0, 14));

                if (index == 0) {
                    label.setForeground(Color.RED);
                } else {
                    label.setForeground(Color.BLACK);
                }

                if (isSelected) {
                    label.setBackground(Color.LIGHT_GRAY);
                    label.setOpaque(true);
                }

                return label;
            }
        });
        getContentPane().add(cboxNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 190, 234, -1));

        cboxMultiNivel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboxMultiNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No ", "Si" }));
        cboxMultiNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxMultiNivelActionPerformed(evt);
            }
        });
        cboxMultiNivel.setRenderer(new javax.swing.ListCellRenderer<String>() {

            @Override
            public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel(value);
                label.setFont(new java.awt.Font("Dialog", 0, 14));

                if (index == 0) {
                    label.setForeground(Color.RED);
                } else {
                    label.setForeground(Color.BLACK);
                }

                if (isSelected) {
                    label.setBackground(Color.LIGHT_GRAY);
                    label.setOpaque(true);
                }

                return label;
            }
        });
        getContentPane().add(cboxMultiNivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 234, -1));

        cboxReloj.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboxReloj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cronómetro ", "Temporizador", "No" }));
        cboxReloj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxRelojActionPerformed(evt);
            }
        });
        cboxReloj.setRenderer(new javax.swing.ListCellRenderer<String>() {

            @Override
            public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel(value);
                label.setFont(new java.awt.Font("Dialog", 0, 14));

                if (index == 0) {
                    label.setForeground(Color.RED);
                } else {
                    label.setForeground(Color.BLACK);
                }

                if (isSelected) {
                    label.setBackground(Color.LIGHT_GRAY);
                    label.setOpaque(true);
                }

                return label;
            }
        });
        getContentPane().add(cboxReloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 234, -1));

        cboxPosicion.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboxPosicion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Derecha", "Izquierda" }));
        cboxPosicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxPosicionActionPerformed(evt);
            }
        });
        cboxPosicion.setRenderer(new javax.swing.ListCellRenderer<String>() {

            @Override
            public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel(value);
                label.setFont(new java.awt.Font("Dialog", 0, 14));

                if (index == 0) {
                    label.setForeground(Color.RED);
                } else {
                    label.setForeground(Color.BLACK);
                }

                if (isSelected) {
                    label.setBackground(Color.LIGHT_GRAY);
                    label.setOpaque(true);
                }

                return label;
            }
        });
        getContentPane().add(cboxPosicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 430, 234, -1));

        botonSalir.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 33, -1, -1));

        lblJugador.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblJugador.setText("Nombre de Jugador:");
        getContentPane().add(lblJugador, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, -1, -1));

        txtfUsuario.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        getContentPane().add(txtfUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 510, 234, -1));

        Guardar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 730, -1, -1));

        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setText("Cargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 730, -1, -1));

        tabPanelReloj.setEnabled(false);

        jLabel1.setText("Horas");

        jLabel2.setText("Minutos");

        jLabel3.setText("Segundos");

        txtfHoras.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfHoras.setText("0");
        txtfHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfHorasActionPerformed(evt);
            }
        });

        txtfMinutos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfMinutos.setText("10");

        txtfSegundos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfSegundos.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfHoras)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(83, 83, 83)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtfMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfMinutos, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(txtfSegundos, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtfHoras)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)))
        );

        tabPanelReloj.addTab("", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );

        tabPanelReloj.addTab("", jPanel4);

        getContentPane().add(tabPanelReloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, 525, 130));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(603, 686, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxTamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTamañoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxTamañoActionPerformed

    private void cboxNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxNivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxNivelActionPerformed

    private void cboxTamaño2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTamaño2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxTamaño2ActionPerformed

    private void cboxMultiNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxMultiNivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxMultiNivelActionPerformed

    private void cboxRelojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxRelojActionPerformed
        // TODO add your handling code here:
        if(cboxReloj.getSelectedIndex() == 0 || cboxReloj.getSelectedIndex()==1){
        
            tabPanelReloj.setSelectedIndex(0);
            
        }else{
        
            tabPanelReloj.setSelectedIndex(1);
            
        }
    }//GEN-LAST:event_cboxRelojActionPerformed

    private void cboxPosicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxPosicionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxPosicionActionPerformed

    private void botonJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJugarActionPerformed
        // TODO add your handling code here:

        if(cboxReloj.getSelectedIndex() == 0 || cboxReloj.getSelectedIndex() == 1){
        
            if(validarTiempo()){
            
                setAjustes();
                seleTablero();    
            
            }else{
                JOptionPane.showMessageDialog(null, "Valores Invalidos");
            
            }

        }else{
        
                setAjustes();
                seleTablero();     
        }
          
    }//GEN-LAST:event_botonJugarActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:

        setVisible(false);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
        
        
        if(cboxReloj.getSelectedIndex() == 1){
        
            if(validarTiempo()){
            
                setAjustes();
                    
            
            }else{
                JOptionPane.showMessageDialog(null, "Valores Invalidos");
            
            }

        }else{
        
                setAjustes();
                     
        }
        
    }//GEN-LAST:event_GuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RestaurarAjustes();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtfHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfHorasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfHorasActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public String getDificultad(){
          
        return cboxNivel.getSelectedItem().toString();
    }
    
    public int getMultiNivel(){
        
        return cboxMultiNivel.getSelectedIndex();
    }
    
    public int getReloj(){
            
        return cboxReloj.getSelectedIndex();      
    }
    
    public String getPosicion(){
     
        return cboxPosicion.getSelectedItem().toString();    

    }
    public int getTam(){
    
        return cboxTamaño.getSelectedIndex();
    
    }
    
    public void ValidarUsuario(){
      
      try{
        if(txtfUsuario.getText().equalsIgnoreCase("") ||txtfUsuario.getText().equalsIgnoreCase("Anónimo")){
            
            nombre = "Anónimo";
            
        }else{
            String pin = JOptionPane.showInputDialog(null, "Ingrese el PIN del usuario:");
            usuario = menu.ValidarUsuarioPIN(txtfUsuario.getText(), pin);
            
            if(usuario!=null){
                
                JOptionPane.showMessageDialog(null, "Se jugara como usuario : "+ usuario.Nickname);
                nombre = usuario.Nickname;
            }else{
            
                JOptionPane.showMessageDialog(null, "No se encuentra al usuario, se procedera como usuario anónimo");
                nombre = "Anónimo";
            }
        }
      }catch(Exception e){
          
          e.printStackTrace();
      }
    }
    
    
    public void setAjustes(){
       cargarAjustes();
        
       ValidarUsuario();
       
       Horas = Integer.parseInt(txtfHoras.getText());
       Minutos = Integer.parseInt(txtfMinutos.getText());
       Segundos = Integer.parseInt(txtfSegundos.getText());  
       Tablero = getTam(); 
       Dificultad = getDificultad();
       MultiNivel = getMultiNivel(); // 0 : No  1: Si
       UsoReloj = getReloj(); // 0 : Cronometro  1: Temporizador   2: No
       Posicion = getPosicion();
       
       Ajustes.add(new AjustesFutoshiki(nombre, Tablero,cboxNivel.getSelectedIndex(),MultiNivel,
                      UsoReloj,cboxPosicion.getSelectedIndex(),Horas,Minutos,Segundos));
       
       guardarAjustes();
    
    }
    
    public void RestaurarAjustes(){
    
        cargarAjustes();
        AjustesFutoshiki ajuste = Ajuste();
        
        if(ajuste!=null){
        
            cboxTamaño.setSelectedIndex(ajuste.IndiceTam);
            cboxNivel.setSelectedIndex(ajuste.IndiceNivel);
            cboxMultiNivel.setSelectedIndex(ajuste.IndiceMultiNivel);
            cboxReloj.setSelectedIndex(ajuste.IndiceReloj);
            cboxPosicion.setSelectedIndex(ajuste.IndiceReloj);
            txtfUsuario.setText(ajuste.nombre);
            txtfHoras.setText(String.valueOf(ajuste.HorasG));
            txtfMinutos.setText(String.valueOf(ajuste.MinutosG));
            txtfHoras.setText(String.valueOf(ajuste.SegundosG));
        }else{
        
            JOptionPane.showMessageDialog(null, "No hay ajustes previos.");
        }
    
    }
    
    public void guardarAjustes(){
        
        //cargarAjustes();
        
        if(Ajustes.size()==2){
        
            Ajustes.remove(0);
        }
        
        try(ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("futoshiki2024configuración.dat"))){
            
            oos.writeObject(Ajustes);

        }catch (IOException e){
            System.out.println("Error al guardar los datos.");
        }
    }

    public void cargarAjustes(){
    
        try(ObjectInputStream ois = new ObjectInputStream(new FileInputStream("futoshiki2024configuración.dat"))) {
            
            Ajustes = (ArrayList<AjustesFutoshiki>) ois.readObject();

        }catch (IOException | ClassNotFoundException e){
            
            System.out.println("Error al cargar los datos.");
        }
    } 
    
    public AjustesFutoshiki Ajuste(){
        
        cargarAjustes();
        for( AjustesFutoshiki ajuste: Ajustes ){
        
            return ajuste;
            
        
        }
        return null;
    }
    
    public boolean validarTiempo(){
        
        try{
            
        int horas = Integer.parseInt(txtfHoras.getText());
        int minutos = Integer.parseInt(txtfMinutos.getText());
        int segundos = Integer.parseInt(txtfSegundos.getText());  
        
            if(horas <=5){
                
                if(minutos <= 59 && segundos <= 59){
                
                    return true;
                }
            
            }
            
        
        }catch(Exception e){
        
        
        }
        return false;
    
    }
    
    public void seleTablero(){
    
        switch(Tablero){
            
            case 0 : // 3x3
                new Frame3x3(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
            
            case 1: // 4x4
                new Frame4x4(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
            
            case 2: // 5x5
                new Frame5x5(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
                
            case 3: // 6x6
                new Frame6x6(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
                
            case 4: // 7x7
                new Frame7x7(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
            
            case 5: // 8x8
                new Frame8x8(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
            
            case 6: // 9x9
                new Frame9x9(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);                
                setVisible(false);
                break;
        
            case 7: // 10x10    
                
                new Frame10x10(Dificultad,MultiNivel,UsoReloj,Posicion,nombre,usuario,Horas,Minutos,Segundos,0).setVisible(true);
                setVisible(false);
                break; 
                
        }
    
    
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Guardar;
    private javax.swing.JButton botonJugar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JComboBox<String> cboxMultiNivel;
    private javax.swing.JComboBox<String> cboxNivel;
    private javax.swing.JComboBox<String> cboxPosicion;
    private javax.swing.JComboBox<String> cboxReloj;
    private javax.swing.JComboBox<String> cboxTamaño;
    private javax.swing.JComboBox<String> cboxTamaño2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblJugador;
    private javax.swing.JLabel lblMultiNivel;
    private javax.swing.JLabel lblNivel;
    private javax.swing.JLabel lblReloj;
    private javax.swing.JLabel lblReloj1;
    private javax.swing.JLabel lblTamaño;
    private javax.swing.JTabbedPane tabPanelReloj;
    private javax.swing.JLabel txtTitulo;
    private javax.swing.JTextField txtfHoras;
    private javax.swing.JTextField txtfMinutos;
    private javax.swing.JTextField txtfSegundos;
    private javax.swing.JTextField txtfUsuario;
    // End of variables declaration//GEN-END:variables
}
