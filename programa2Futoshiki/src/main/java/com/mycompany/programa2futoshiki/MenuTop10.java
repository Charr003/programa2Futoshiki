/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.programa2futoshiki;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;


/**
 *
 * @author XPC
 */
public class MenuTop10 extends javax.swing.JFrame {

    /**
     * Creates new form MenuTop10
     */
    public MenuTop10() {
        initComponents();
        setLocationRelativeTo(null);
        cargarAjustes();
        String topFacil = mostrarTop10("3x3", "FÃ¡cil");
        
        System.out.println(topFacil);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonSalir.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(botonSalir)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(botonSalir)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:

        setVisible(false);
    }//GEN-LAST:event_botonSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private static ArrayList<AjustesTop10> jugadores = new ArrayList<>();
    
    
    public void AgregarLista(AjustesTop10 prefs){
    
        jugadores.add(prefs);
        
    }
    
    public void guardarAjustes(){
        
        
        try(ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("futoshiki2024top10.dat"))){
            
            oos.writeObject(jugadores);

        }catch (IOException e){
            System.out.println("Error al guardar los datos.");
        }
    }

    public void cargarAjustes(){
    
        try(ObjectInputStream ois = new ObjectInputStream(new FileInputStream("futoshiki2024top10.dat"))){
            
            jugadores = (ArrayList<AjustesTop10>) ois.readObject();

        }catch (IOException | ClassNotFoundException e){
            
            System.out.println("Error al cargar los datos.");
        }
    } 
    
    private static String mostrarTop10(String tablero, String dificultad){
        

        StringBuilder resultado = new StringBuilder();
        resultado.append("\nTop 10 - Tablero: ").append(tablero).append(" - Dificultad: ").append(dificultad).append("\n");

        ArrayList<AjustesTop10> top10 = new ArrayList<>(jugadores.stream()
                
                .filter(Top -> Top.Dificultad.equals(dificultad) && Top.TamTablero.equals(tablero))
                .sorted(Comparator.comparingInt(Top -> Top.SegundosTotal))
                .limit(10)
                .toList());

        for(int i = 0; i < top10.size(); i++){
            
            resultado.append((i + 1)).append(" - ").append(top10.get(i)).append("\n");
        }

        return resultado.toString();
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSalir;
    // End of variables declaration//GEN-END:variables
}
